'use strict';
const qtoolsGen = require('qtools');
const qtools = new qtoolsGen(module);

//START OF moduleFunction() ============================================================

var moduleFunction = function(args) {

	qtools.validateProperties({
		subject: args || {},
		targetScope: this, //will add listed items to targetScope
		propList: [
			{
				name: 'config',
				optional: false
			},
			{
				name: 'router',
				optional: false
			},
			{
				name: 'usersModel',
				optional: false
			}
		]
	});

	//LOCAL VARIABLES ====================================

	//LOCAL FUNCTIONS ====================================

	//METHODS AND PROPERTIES ====================================

	this.shutdown = (message, callback) => {
		console.log(`
shutting down ${__dirname}`);
		callback('', message);
	}



	//API ENDPOINTS ====================================

	this.router.post(/session$/, (req, res, next) => {
		const userName=qtools.getSurePath(req, 'body.user.username');


		if (userName) {
			this.usersModel.get({username:userName}, (err, users) => {
				if (err) {
					res.status(404).send(JSON.stringify({
						message: err
					}));
				} else {
					res.json(users);
				}
			});

		} else {
			res.status(404).send(JSON.stringify({
				message: "Invalid Login"
			}));
		}
		// 		User.find((err, users) => {
		// 			if (req.user) {
		// 				res.send({id: req.user.id, user: _.omit(req.user.toJSON(), "password")});
		// 			} else {
		// 				res.status(404).send(JSON.stringify({
		// 					message : "No session"
		// 				}));
		// 			}
		// 		})

	});
	//INITIALIZATION ====================================

	console.log(__dirname);

	return this;
};

//END OF moduleFunction() ============================================================

module.exports = moduleFunction;
//module.exports = new moduleFunction();

